getwd()
install.packages("dplyr")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("knitr")
install.packages("knitr")
install.packages("dplyr")
getwd()
download.file("https://d396qusza40orc.cloudfront.net/repdata/data/StormData.csv.bz2")
download.file("https://d396qusza40orc.cloudfront.net/repdata/data/StormData.csv.bz2", "StormData.csv")
stormData <- read.csv("file.csv.bz2")
stormData <- read.csv("StormData.csv.bz2")
install.packages("plyr")
head(stormData)
summary(stormData)
colnames(stormdata)
colnames(stormData)
casualties <- ddply(storm, .(EVTYPE), summarize, fatalities = sum(FATALITIES), injuries = sum(INJURIES))
install.packages("plyr")
casualties <- ddply(storm, .(EVTYPE), summarize, fatalities = sum(FATALITIES), injuries = sum(INJURIES))
library("plyr")
casualties <- ddply(storm, .(EVTYPE), summarize, fatalities = sum(FATALITIES), injuries = sum(INJURIES))
casualties <- ddply(stormData, .(EVTYPE), summarize, fatalities = sum(FATALITIES), injuries = sum(INJURIES))
casualties
library("plyr")
library("dplyr")
library("ggplot2")
library("knitr")
download.file("https://d396qusza40orc.cloudfront.net/repdata/data/StormData.csv.bz2", "StormData.csv.bz2")
stormData <- read.csv("StormData.csv.bz2")
colnames(stormData)
casualties <- ddply(stormData, .(EVTYPE), summarize, fatalities = sum(FATALITIES), injuries = sum(INJURIES))
casualties
count(casualties)
casualties.length
length(casualties)
    )
head(casualties)
typeof(casualties)
casualties$fatalities + casualties$injuries
sum(casualties$fatalities, casualties$injuries)
casualties$fatalities + casualties$injuries
casualtiesCount(casualties$fatalities + casualties$injuries)
casualtiesCount <- casualties$fatalities + casualties$injuries
casualtiesCoutn
casualtiesCount
casualties$totalCasualties <- casualties$fatalities + casualties$injuries
casualties
casualties[which.max(casualties$totalCasualties)]
library("plyr")
library("dplyr")
library("ggplot2")
library("knitr")
stormData <- read.csv("StormData.csv.bz2")
colnames(stormData)
casualties <- ddply(stormData, .(EVTYPE), summarize, fatalities = sum(FATALITIES), injuries = sum(INJURIES))
stormData
stormData <- read.csv("StormData.csv.bz2")
getwd()
library("plyr")
library("dplyr")
library("ggplot2")
library("knitr")
stormData <- read.csv("StormData.csv.bz2")
colnames(stormData)
casualties <- ddply(stormData, .(EVTYPE), summarize, fatalities = sum(FATALITIES), injuries = sum(INJURIES))
rtvs::debug_source("script.R")
casualties <- ddply(stormData, .(EVTYPE), summarize, fatalities = sum(FATALITIES), injuries = sum(INJURIES))
casualties$totalCasualties <- casualties$fatalities + casualties$fatalities
casualties
casualties$totalCasualties <- casualties$fatalities + casualties$fatalities
casualties
casualties$totalCasualties <- casualties$fatalities + casualties$injuries
casualties
casualties[which.max(casualties$totalCasualties)]
casualties[which.max(casualties$totalCasualties),]
library("plyr")
library("plyr")
library("dplyr")
library("ggplot2")
library("knitr")
stormData <- read.csv("StormData.csv.bz2")
casualties <- ddply(stormData, .(EVTYPE), summarize, fatalities = sum(FATALITIES), injuries = sum(INJURIES))
casualties$totalCasualties <- casualties$fatalities + casualties$injuries
casualties[order(-totalCasualties)]
casualties[order( - casualties$totalCasualties)]
casualties[with(casualties, order(-totalCasualties)),]
hist(casualties)
plot(casualties)
plot(casualties$names, casualties$totalCasualties)
plot(casualties$names, casualties$totalCasualties)
plot(casualties$EVTYPE, casualties$totalCasualties)
ggplot(casualties, aes(x = EVTYPE, y = fatalities))
casualties[1: 20]
casualties <- casualties[with(casualties, order( - totalCasualties)),][1: 5 ]
casualties <- casualties[with(casualties, order( - totalCasualties)),][1: 5, ]
ggplot(casualties, aes(x= EVTYPE, y = fatalities))
ggplot(casualties, aes(x = EVTYPE, y = fatalities)) + geom_bar(stat = "identity", fill = "blue", las = 3)
ggplot(casualties, aes(x = EVTYPE, y = fatalities)) + geom_bar(stat = "identity", fill = "blue")
ggplot(casualties, aes(x = EVTYPE, y = fatalities)) + geom_bar(stat = "identity", fill = "light blue")
ggplot(casualties, aes(x = EVTYPE, y = casualties)) + geom_bar(stat = "identity", fill = "light blue")
ggplot(casualties, aes(x = EVTYPE, y = totalCasualties)) + geom_bar(stat = "identity", fill = "light blue")
ggplot(casualties, aes(x = EVTYPE, y = totalCasualties)) + geom_bar(stat = "identity", fill = "light blue") + xlab("Event type") + ylab("Total casualties")
economicDamages <- aggregate(PROPDMGNUM + CROPDMGNUM ~ EVTYPE, stormData, sum)
damages <- ddply(stormData, .(EVTYPE), summarize, property = sum(PROPDMG), crop = sum(CROPDMG))
damages$totalDamages <- damages$property + damages$crop
damages <- damages[with(damages, order( - totalDamages)),][1:5,]
ggplot(damages, aes(x = EVTYPE, y = totalDamages)) + geom_bar(stat = "identity", fill = "light blue") + xlab("Event type") + ylab("Total damages")
ggplot(damages, aes(x = EVTYPE, y = totalDamages)) + geom_bar(stat = "identity", fill = "light blue") + xlab("Event type") + ylab("Total damages ($)")
install.packages("knitr")
ggplot(casualties, aes(x = EVTYPE, y = totalCasualties)) + geom_bar(stat = "identity", fill = "light blue") + xlab("Event type") + ylab("Total casualties")
ggplot(damages, aes(x = EVTYPE, y = totalDamages)) + geom_bar(stat = "identity", fill = "light blue") + xlab("Event type") + ylab("Total damages ($)")
head(stormData)
library("knitr")
rtvs::debug_source("script.R")
knit("Markdown.rmd")
knit("Markdown.rmd")
markdownToHTML('My_Analysis.md', 'My_Analysis.html', options = c("use_xhml"))
markdownToHTML('Markdown.md', 'Markdown.html', options = c("use_xhml"))
markdownToHTML('Markdown.md', 'Markdown.html', options = c("use_xhml"))
system("pandoc -s My_Analysis.html -o My_Analysis.pdf")
library("markdown")
markdownToHTML('Markdown.md', 'Markdown.html', options = c("use_xhml"))
system("pandoc -s Markdown.html -o Markdown.pdf")
system("pandoc -s Markdown.html -o Markdown.pdf")
install.pandoc
install.packages("pandoc")
knit("Markdown.rmd")
markdownToHTML('Markdown.md', 'Markdown.html', options = c("use_xhml"))
